<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
    "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="testCaseDAO">
  <resultMap id="testCase" type="com.unittest.unittest.model.TestCase">
    <result property="id" column="id" />
    <result property="name" column="name" />
    <result property="desc" column="desc" />
  </resultMap>

  <sql id="sql_insert_column_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null and entity.id != ''">,id</if>
      <if test="entity.name != null and entity.name != ''">,name</if>
      <if test="entity.desc != null and entity.desc != ''">,desc</if>
    </trim>
  </sql>

  <sql id="sql_insert_property_list">
    <trim prefix="" prefixOverrides=",">
      <if test="entity.id != null and entity.id != ''">,#{entity.id}</if>
      <if test="entity.name != null and entity.name != ''">,#{entity.name}</if>
      <if test="entity.desc != null and entity.desc != ''">,#{entity.desc}</if>
    </trim>
  </sql>

  <sql id="sql_column_list">
    id
    ,name
    ,desc
  </sql>

  <sql id="sql_update_set">
    <trim prefix="SET" prefixOverrides=",">
      <if test="entity != null">
        <choose>
          <when test="entity.forceUpdateProperties.contains('id')">
            ,id = #{entity.id, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.id != null and entity.id != ''">,id = #{entity.id}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('name')">
            ,name = #{entity.name, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.name != null and entity.name != ''">,name = #{entity.name}</if>
          </otherwise>
        </choose>
        <choose>
          <when test="entity.forceUpdateProperties.contains('desc')">
            ,desc = #{entity.desc, jdbcType=VARCHAR}
          </when>
          <otherwise>
            <if test="entity.desc != null and entity.desc != ''">,desc = #{entity.desc}</if>
          </otherwise>
        </choose>
        <if test="!entity.incrementUpdateMap.isEmpty()">
          ,
          <foreach collection="entity.incrementUpdateMap" index="key" item="value" separator=",">
            ${key} = ${key} + #{value}
          </foreach>
        </if>
      </if>
    </trim>
  </sql>

  <sql id="sql_condition">
    <if test="condition != null">
      <if test="condition.id != null and condition.id != ''">AND id = #{condition.id}</if>
      <if test="condition.name != null and condition.name != ''">AND name = #{condition.name}</if>
      <if test="condition.desc != null and condition.desc != ''">AND desc = #{condition.desc}</if>
      <if test="!condition.expressionChainList.empty">
        AND
        <foreach collection="condition.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </if>
  </sql>

  <sql id="sql_pagination_start">
  <![CDATA[
  ]]>
  </sql>

  <sql id="sql_pagination_end">
  <![CDATA[
    LIMIT #{offset}, #{limit}
  ]]>
  </sql>

  <insert id="insert" parameterType="java.util.Map">
    INSERT INTO test_case (
      <include refid="sql_insert_column_list" />
    ) VALUES (
      <include refid="sql_insert_property_list" />
    )
  </insert>

  <select id="get" parameterType="java.util.Map" resultMap="testCase">
    SELECT
      <include refid="sql_column_list" />
    FROM test_case
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="getById" parameterType="java.util.Map" resultMap="testCase">
    SELECT
      <include refid="sql_column_list" />
    FROM test_case
    WHERE id = #{id}
  </select>

  <select id="find" parameterType="java.util.Map" resultMap="testCase">
    <if test="offset != null">
      <include refid="sql_pagination_start" />
    </if>
    SELECT
      <include refid="sql_column_list" />
    FROM test_case
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="offset != null">
      <include refid="sql_pagination_end" />
    </if>
  </select>

  <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(${count_column}) AS count_ FROM test_case
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.HashMap">
    SELECT ${aggregate_sql} FROM test_case
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </select>

  <update id="update" parameterType="java.util.Map">
    UPDATE test_case
    <include refid="sql_update_set" />
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </update>

  <update id="updateById" parameterType="java.util.Map">
    UPDATE test_case
    <include refid="sql_update_set" />
    WHERE id = #{id}
  </update>

  <delete id="remove" parameterType="java.util.Map">
    DELETE FROM test_case
    <trim prefix="WHERE" prefixOverrides="AND">
      <include refid="sql_condition" />
    </trim>
  </delete>

  <delete id="removeById" parameterType="java.util.Map">
    DELETE FROM test_case
    WHERE id = #{id}
  </delete>
</mapper>
